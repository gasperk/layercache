#summary Two examples

= Examples =

Here are a few examples that will help you get started.

== Example 1: caching a user profile in Memcache and APC ==

First, let's define a _source object_. In this example, the source object uses database.

{{{
class UserProfileSource
{
  protected $db;
  
  function __construct($db)
  {
    $this->db = $db;
  }
  
  function normalizeKey($key)
  {
    return "userprofile/" . intval($key);
  }

  function get($key)
  {
    return $this->db->query('select * from user_profile where user_id = ' . intval($key));
  }
}
}}}

So, this is a very simple source object, that can normalize a key and read a record from the database. Now let's create a cache stack that will use two cache layers (Memcache and APC).
{{{
// create a database object to be used with UserProfileSource
$database = new PDO(...);

// prepare a memcache object to be used in a stack
$memcache = new Memcache;
$memcache->connect('memcachehost');

LayerCache::
  forSource(new UserProfileSource($database))->
  addCache(new LayerCache_Cache_Memcache($memcache))->withTTL(3600)->
  addCache(new LayerCache_Cache_APC())->withTTL(600)->
  toStack('UserProfile');
}}}

Now, use the cache stack:
{{{
$user_profile = LayerCache::stack('UserProfile')->get(43);
}}}

The caches are read in reverse order, so LayerCache will read from APC first. If the item isn't present in APC, item will be read from Memcache. If the item isn't there either, the source object's get method will be called, the data will be returned, and cached in both layers; Memcache (with TTL 1 hour) and APC (with TTL 10 minutes).
